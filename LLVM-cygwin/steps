I have started to experiment with LLVM recently. I do not have Visual Studio on my machine so I am experimenting with cygwin.

1. Download and read the "Getting Started guide" from llvm.org/docs
2. Download and install a subversion client. I used SlikSvn. I intend to build LLVM suite from source, and I think it is easier to check out the repository using a version control tool like subversion.
3. Download and install Git. There's a nice guide at <http://help.github.com/win-set-up-git/>. This is not necessary but this allows me to store my scripts (such as this one) somewhere on github.
4. Download and install cygwin. It's sufficient to download the setup.exe and then install from the Internet. Check the "Requirement/software" section of the "Getting Started guide" as mentioned in step 1. In my experience, a lot of these tools are included by default when installing cygwin, but the following need to be explicitly specified when configuring the package list during the cygwin installation process:
dejagnu, expect, perl, GNU M4, autoconf, automake, libtool, make, unzip, zip
(For cygwin version 1.7.9)
5. Download and install GCC on Windows. I used bloodshed Dev-C++. Or maybe use mingw.
6. Download LLVM-GCC front end binary from: http://llvm.org/releases/2.9/llvm-gcc4.2-2.9-x86-mingw32.tar.bz2
7. run init_setup.sh to extract the sources and build LLVM;
8. run init_check.sh to compile a simple hello-world program;


TROUBLESHOOTING
1. "llvm-gcc: CreateProcess: no such file or directory"
   I use Windows Vista Home and when I use llvm-gcc (through init_check.sh as mentioned above in step #8) it gives me this succinct error message. To fix the problem, pass "-v" to llvm-gcc to find out what commands the driver is dispatching. Then run the individual command to identify each problem. I had to fix the following issues:
   a) llvm-gcc cannot find cc1 and collect2: need to add llvm-gcc/libexec/gcc/i386-mingw32/<version_number> to my path;
   b) cc1 and collect2 do not have execute-permission: I used chmod from cygwin; I heard that you can also use cacls from the command prompt;
   c) if running llvm-gcc from cygwin, avoid passing cygwin-style paths to llvm-gcc (or create a short-cut to bypass the problem).

2. "lli: error creating EE: Unable to find target for this triple (no targets are registered)"
   The problem is in init_setup.sh, where I specified "--enable-targets=powerpc." Adding x86 to the list solves the problem. I was misled by the description of the "--enable-targets" option in the "Getting Started guide" where it specifically says this option affects "which targets will be built and linked into llc." I interpreted that to mean lli will not be affected. Anyway, problem solved.

3. gmake complains of "multiple target patterns"
   This has something to do with the cygwin-style vs dos-style file paths. So when I run "configure --prefix=<some_path>," the specified path is not expected to have colons in it, otherwise gmake will interpret the colon as a target-list separator. Colons are fairly common in dos-style paths (e.g., C:\My_dearest_LLVM); the solution is to use a cygwin-style path for configuration.

4. autoconf/install-sh and autoconf/mkinstalldir not runnable
   I have a little function do_remove_carriage in init_setup.sh to remove carriage-returns from these files and then use chmod to add executable-permission back to these files. This step is necessary before cygwin agrees to run these scripts. Seems that "chmod <cygwin-style path>" does not always update the result of "ls -l <dos-style path of same file", so I need to run chmod twice on these two files. A bit annoying.
